diff -up shadow-4.1.4.2/libmisc/getdate.c.date-parsing shadow-4.1.4.2/libmisc/getdate.c
--- shadow-4.1.4.2/libmisc/getdate.c.date-parsing	2008-06-14 00:07:51.000000000 +0200
+++ shadow-4.1.4.2/libmisc/getdate.c	2015-03-26 17:15:49.540472253 +0100
@@ -261,6 +261,7 @@ static int	yyHaveDay;
 static int	yyHaveRel;
 static int	yyHaveTime;
 static int	yyHaveZone;
+static int	yyHaveYear;
 static int	yyTimezone;
 static int	yyDay;
 static int	yyHour;
@@ -1730,6 +1731,7 @@ yyreduce:
 	      yyDay = (yyvsp[(3) - (5)].Number);
 	      yyYear = (yyvsp[(5) - (5)].Number);
 	    }
+	    yyHaveYear++;
 	}
     break;
 
@@ -1740,6 +1742,7 @@ yyreduce:
 	    yyYear = (yyvsp[(1) - (3)].Number);
 	    yyMonth = -(yyvsp[(2) - (3)].Number);
 	    yyDay = -(yyvsp[(3) - (3)].Number);
+	    yyHaveYear++;
 	}
     break;
 
@@ -1750,6 +1753,7 @@ yyreduce:
 	    yyDay = (yyvsp[(1) - (3)].Number);
 	    yyMonth = (yyvsp[(2) - (3)].Number);
 	    yyYear = -(yyvsp[(3) - (3)].Number);
+	    yyHaveYear++;
 	}
     break;
 
@@ -1767,6 +1771,7 @@ yyreduce:
 	    yyMonth = (yyvsp[(1) - (4)].Number);
 	    yyDay = (yyvsp[(2) - (4)].Number);
 	    yyYear = (yyvsp[(4) - (4)].Number);
+	    yyHaveYear++;
 	}
     break;
 
@@ -1784,6 +1789,7 @@ yyreduce:
 	    yyMonth = (yyvsp[(2) - (3)].Number);
 	    yyDay = (yyvsp[(1) - (3)].Number);
 	    yyYear = (yyvsp[(3) - (3)].Number);
+	    yyHaveYear++;
 	}
     break;
 
@@ -1928,7 +1934,8 @@ yyreduce:
   case 49:
 #line 397 "getdate.y"
     {
-	    if ((yyHaveTime != 0) && (yyHaveDate != 0) && (yyHaveRel == 0))
+	    if ((yyHaveTime != 0 || (yyvsp[(1) - (1)].Number) >= 100) && !yyHaveYear
+		&& (yyHaveDate != 0) && (yyHaveRel == 0))
 	      yyYear = (yyvsp[(1) - (1)].Number);
 	    else
 	      {
@@ -2556,7 +2563,7 @@ yylex (void)
 	  return LookupWord (buff);
 	}
       if (c != '(')
-	return *yyInput++;
+	return (unsigned char)*yyInput++;
       Count = 0;
       do
 	{
diff -up shadow-4.1.4.2/libmisc/getdate.y.date-parsing shadow-4.1.4.2/libmisc/getdate.y
--- shadow-4.1.4.2/libmisc/getdate.y.date-parsing	2008-05-26 10:57:51.000000000 +0200
+++ shadow-4.1.4.2/libmisc/getdate.y	2015-03-26 17:15:49.541472275 +0100
@@ -152,6 +152,7 @@ static int	yyHaveDay;
 static int	yyHaveRel;
 static int	yyHaveTime;
 static int	yyHaveZone;
+static int      yyHaveYear;
 static int	yyTimezone;
 static int	yyDay;
 static int	yyHour;
@@ -293,18 +294,21 @@ date	: tUNUMBER '/' tUNUMBER {
 	      yyDay = $3;
 	      yyYear = $5;
 	    }
+	    yyHaveYear++;
 	}
 	| tUNUMBER tSNUMBER tSNUMBER {
 	    /* ISO 8601 format.  yyyy-mm-dd.  */
 	    yyYear = $1;
 	    yyMonth = -$2;
 	    yyDay = -$3;
+	    yyHaveYear++;
 	}
 	| tUNUMBER tMONTH tSNUMBER {
 	    /* e.g. 17-JUN-1992.  */
 	    yyDay = $1;
 	    yyMonth = $2;
 	    yyYear = -$3;
+	    yyHaveYear++;
 	}
 	| tMONTH tUNUMBER {
 	    yyMonth = $1;
@@ -314,6 +318,7 @@ date	: tUNUMBER '/' tUNUMBER {
 	    yyMonth = $1;
 	    yyDay = $2;
 	    yyYear = $4;
+	    yyHaveYear++;
 	}
 	| tUNUMBER tMONTH {
 	    yyMonth = $2;
@@ -323,6 +328,7 @@ date	: tUNUMBER '/' tUNUMBER {
 	    yyMonth = $2;
 	    yyDay = $1;
 	    yyYear = $3;
+	    yyHaveYear++;
 	}
 	;
 
@@ -395,7 +401,8 @@ relunit	: tUNUMBER tYEAR_UNIT {
 
 number	: tUNUMBER
           {
-	    if ((yyHaveTime != 0) && (yyHaveDate != 0) && (yyHaveRel == 0))
+	    if ((yyHaveTime != 0 || $1 >= 100) && !yyHaveYear
+		&& (yyHaveDate != 0) && (yyHaveRel == 0))
 	      yyYear = $1;
 	    else
 	      {
@@ -802,7 +809,7 @@ yylex (void)
 	  return LookupWord (buff);
 	}
       if (c != '(')
-	return *yyInput++;
+	return (unsigned char)*yyInput++;
       Count = 0;
       do
 	{
diff -up shadow-4.1.4.2/libmisc/strtoday.c.date-parsing shadow-4.1.4.2/libmisc/strtoday.c
--- shadow-4.1.4.2/libmisc/strtoday.c.date-parsing	2008-06-13 21:48:14.000000000 +0200
+++ shadow-4.1.4.2/libmisc/strtoday.c	2015-03-26 17:21:08.833648735 +0100
@@ -36,6 +36,8 @@
 
 #include <config.h>
 
+#include <ctype.h>
+
 #ident "$Id: strtoday.c 2139 2008-06-13 19:48:11Z nekral-guest $"
 
 #include "defines.h"
@@ -63,6 +65,8 @@
 long strtoday (const char *str)
 {
 	time_t t;
+	bool isnum = true;
+	const char *s = str;
 
 	/*
 	 * get_date() interprets an empty string as the current date,
@@ -73,9 +77,32 @@ long strtoday (const char *str)
 		return -1;
 	}
 
+	/* If a numerical value is provided, this is already a number of
+	 * days since EPOCH.
+	 */
+	if ('-' == *s) {
+		s++;
+	}
+	while (' ' == *s) {
+		s++;
+	}
+	while (isnum && ('\0' != *s)) {
+		if (!isdigit (*s)) {
+			isnum = false;
+		}
+		s++;
+	}
+	if (isnum) {
+		long retdate;
+		if (getlong (str, &retdate) == 0) {
+			return -2;
+		}
+		return retdate;
+	}
+
 	t = get_date (str, (time_t *) 0);
 	if ((time_t) - 1 == t) {
-		return -1;
+		return -2;
 	}
 	/* convert seconds to days since 1970-01-01 */
 	return (long) (t + DAY / 2) / DAY;
diff -up shadow-4.1.4.2/src/chage.c.date-parsing shadow-4.1.4.2/src/chage.c
--- shadow-4.1.4.2/src/chage.c.date-parsing	2009-04-30 23:39:39.000000000 +0200
+++ shadow-4.1.4.2/src/chage.c	2015-03-26 17:15:49.541472275 +0100
@@ -90,7 +90,6 @@ static long expdate;
 #define	EPOCH		"1969-12-31"
 
 /* local function prototypes */
-static bool isnum (const char *s);
 static void usage (void);
 static void date_to_str (char *buf, size_t maxsize, time_t date);
 static int new_fields (void);
@@ -136,20 +135,6 @@ static void fail_exit (int code)
 }
 
 /*
- * isnum - determine whether or not a string is a number
- */
-static bool isnum (const char *s)
-{
-	while ('\0' != *s) {
-		if (!isdigit (*s)) {
-			return false;
-		}
-		s++;
-	}
-	return true;
-}
-
-/*
  * usage - print command line syntax and exit
  */
 static void usage (void)
@@ -223,7 +208,7 @@ static int new_fields (void)
 		lstchgdate = -1;
 	} else {
 		lstchgdate = strtoday (buf);
-		if (lstchgdate == -1) {
+		if (lstchgdate < -1) {
 			return 0;
 		}
 	}
@@ -251,7 +236,7 @@ static int new_fields (void)
 		expdate = -1;
 	} else {
 		expdate = strtoday (buf);
-		if (expdate == -1) {
+		if (expdate < -1) {
 			return 0;
 		}
 	}
@@ -406,10 +391,8 @@ static void process_flags (int argc, cha
 		switch (c) {
 		case 'd':
 			dflg = true;
-			if (!isnum (optarg)) {
-				lstchgdate = strtoday (optarg);
-			} else if (   (getlong (optarg, &lstchgdate) == 0)
-			           || (lstchgdate < -1)) {
+			lstchgdate = strtoday (optarg);
+			if (lstchgdate < -1) {
 				fprintf (stderr,
 				         _("%s: invalid date '%s'\n"),
 				         Prog, optarg);
@@ -418,10 +401,8 @@ static void process_flags (int argc, cha
 			break;
 		case 'E':
 			Eflg = true;
-			if (!isnum (optarg)) {
-				expdate = strtoday (optarg);
-			} else if (   (getlong (optarg, &expdate) == 0)
-			           || (expdate < -1)) {
+			expdate = strtoday (optarg);
+			if (expdate < -1) {
 				fprintf (stderr,
 				         _("%s: invalid date '%s'\n"),
 				         Prog, optarg);
